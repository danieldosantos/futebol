version: "3.9"

services:
  traefik:
    image: traefik:v2.11
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - api
      - web

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: bola
      POSTGRES_PASSWORD: bola123
      POSTGRES_DB: bolasocial
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  api:
    build:
      context: ../
      dockerfile: infra/dockerfiles/api.Dockerfile
    environment:
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__Postgres: Host=postgres;Port=5432;Database=bolasocial;Username=bola;Password=bola123
      ConnectionStrings__Redis: redis:6379
      Jwt__Key: dev-secret
    depends_on:
      - postgres
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/hubs`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

  web:
    build:
      context: ../
      dockerfile: infra/dockerfiles/web.Dockerfile
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost/api
    depends_on:
      - api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=3000"

volumes:
  postgres-data:
